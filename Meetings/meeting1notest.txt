Read papers on data structures on Tervel.

Use:
	-Skip list
	-Priority queue / multi dimensinal list

Approach 1:
	- Do what MemSQL does, except in an open source way.

Know what the data structures use + the how the memory works.

Principles:
 - Start small, build up on it later.
 - Wait-free does not have any automated way of testing
 - Google C++ style guide (C++14 permitted)

Resources given to us:
 - Going to get control of git repository with ability to create more as needed
 - Server (time-shared with other students)

Overall Goals:
 - Be able to one basic benchmark.
 - Move on to the git repo.
 - Performance improvement over a regular database.
 - 8-10 page report (not just features, more like academic workshop - what is new and interesting about this).
 - Similar to MemSQL, setting for ACID vs performace.

Senior Design 1 Deliverable(s):
 - System architecture
 - Initial documentation
 - Motivation & Problem statement (half-page)
 - Related work (half-page) and comparison of this project to that work
	
Project:
 - Create own milestones and project progression (Incremental, Spiral, Agile?)
 - Make tools as we need them
 - Read the materials given so that we know how to use the algorithms provided
 - Biweekly email updates
 - Monthly in-person meetings with Dechev on Fridays (email him to confirm times)

Expected Final Deliverable:
 - Source code on UCF GitHub
 - GitHub Page similar to Tervel's
 - Able to run a basic benchmark (e.g. SQLite's benchmark)
 - In-depth documentation
 - Workshop paper that details new approaches used in databases
 - Database uses ANSI SQL
